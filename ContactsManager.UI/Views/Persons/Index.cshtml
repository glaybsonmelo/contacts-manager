@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
}
<form asp-controller="Persons" asp-action="Index" method="get">
    <div class="flex">
        <div class="flex-1">
            <span class="text-grey">Contacts</span>
            <i class="fa-solid fa-caret-right"></i>
            <span class="text-grey">Persons</span>
        </div>
         <div class="flex-1 text-right">
            <a asp-controller="Persons" asp-action="Create" class="button-link button-blue-back ml">Create Person</a>
            <a asp-controller="Persons" asp-action="PersonsPDF" class="button-link button-blue-back ml">Download as PDF</a>
         </div>
    </div>

    <div class="table-container">
        <div class="flex">
            <div class="flex-1">
                <h1>Persons</h1>
            </div>
            <div class="flex-3 text-right">
                <label>Search by:</label>
                <select class="search-dropdown" name="searchBy" style="width: 200px;">
                    @foreach (var field in ViewBag.SearchFields)
                    {
                        if (field.Key == ViewBag.currentSearchBy)
                        {
                            <option value="@field.Key" selected="selected"> @field.Value</option>

                        }
                        <option value="@field.Key"> @field.Value</option>
                    }
                </select>
                <input name="searchString" type="search" id="Search" class="search-button" placeholder="Search" value="@ViewBag.CurrentSearchString" />
                <button class="button button-blue-back">Search</button>
                <a asp-controller="Persons" asp-action="Create" class="ml link-hover button-link button-blue-back">Clear All</a>
            </div>
        </div>
    </div>

<table class="table w-100 mt persons">
        <thead>
            <tr>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.Name) },
                    { "DisplayName", "Person Name" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.Email) },
                    { "DisplayName", "Email" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.BirthDate) },
                    { "DisplayName", "Birth Date" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.Age) },
                    { "DisplayName", "Age" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.Gender) },
                    { "DisplayName", "Gender" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.Country) },
                    { "DisplayName", "Country" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.Address) },
                    { "DisplayName", "Address" },
                    })
                </th>
                <th>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                    { "ColumnName", nameof(PersonResponse.ReceiveNewsLetters) },
                    { "DisplayName", "Receive News Letters" },
                    })
                </th>
                <th>Options</th>
            <tr>
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td style="width: 10%">@person.Name</td>
                    <td style="width: 20%">@person.Email</td>
                    <td style="width: 10%">@person.BirthDate?.ToString("dd MMM yyyy")</td>
                    <td style="width:  6%">@person.Age</td>
                    <td style="width:  8%">@person.Gender</td>
                    <td style="width: 10%">@person.Country</td>
                    <td style="width: 15%">@person.Address</td>
                    <td style="width: 8%">@person.ReceiveNewsLetters</td>
                    <td style="width: 20%">
                        <a class="button-link button-blue-back" asp-controller="Persons" asp-action="Edit" asp-route-PersonId="@person.Id">Edit</a>
                        <a class="button-link button-red-back" asp-controller="Persons" asp-action="Delete" asp-route-PersonId="@person.Id">Delete</a>
                    </td>
                </tr>

            }
        </tbody>
</table>
<table class="table w-100 mt">

</table>
</form>
